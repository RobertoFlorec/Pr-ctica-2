/*
 * LCDNokia5110.h
 *
 *  Created on: Jun 11, 2014
 *      Author: Luis
 */

#ifndef LCDNOKIA5110_H_
#define LCDNOKIA5110_H_

#include "DataTypeDefinitions.h"
#include "GPIO.h"
#include "NVIC.h"

#define SCREENW 84
#define SCREENH 48

#define LCD_X 84
#define LCD_Y 48
#define LCD_DATA 1
#define LCD_CMD 0
#define DATA_OR_CMD_PIN 3
#define RESET_PIN 0

#define ZERO 0x30
#define ONE 0x31
#define TWO 0x32
#define THREE 0x33
#define FOUR 0x34
#define FIVE 0x35
#define SIX 0x36
#define SEVEN 0x37
#define EIGHT 0x38
#define NINE 0x39
#define PUNTO 0x2E

typedef struct{
	uint8 BTN0: 1;
	uint8 BTN1: 1;
	uint8 BTN2: 1;
	uint8 BTN3: 1;
	uint8 BTN4: 1;
	uint8 BTN5: 1;
}BTNType;

typedef struct{
	uint8 BTN0_flag: 1;
	uint8 BTN1_flag: 1;
	uint8 BTN2_flag: 1;
	uint8 BTN3_flag: 1;
	uint8 BTN4_flag: 1;
	uint8 BTN5_flag: 1;
	uint8 BTN_flag: 1;
}BtnFlagType;



/*It configures the LCD*/
void LCDNokia_init(void);
/*It writes a byte in the LCD memory. The place of writing is the last place that was indicated by LCDNokia_gotoXY. In the reset state
 * the initial place is x=0 y=0*/
void LCDNokia_writeByte(uint8, uint8);
/*it clears all the figures in the LCD*/
void LCDNokia_clear(void);
/*It is used to indicate the place for writing a new character in the LCD. The values that x can take are 0 to 84 and y can take values
 * from 0 to 5*/
void LCDNokia_gotoXY(uint8 x, uint8 y);
/*It allows to write a figure represented by constant array*/
void LCDNokia_bitmap(const uint8*);
/*It write a character in the LCD*/
void LCDNokia_sendChar(uint8);
/*It write a string into the LCD*/
void LCDNokia_sendString(uint8*);
/*It used in the initialization routine*/
void LCD_delay(void);


/**This function displays the first screen to be seen*/
void pantallaInicial(void);
/**This function displays the main menu and allow its functions to be active*/
void menu(void);
/**Displays the alarm menu, and let its functions to be active*/
void pantallaAlarma(void);
/**Displays the temperature format screen and allow its functions to be active*/
void pantallaFormatoTemp(void);
/**Displays the increase/decrease screen and allow its functions to be active*/
void pantallaDecremento(void);
/**Displays the manual control screen and allow its functions to be active*/
void pantallaCtrlManual(void);
/**Displays the frequency screen and allow its functions to be active*/
void pantallaFrecuancia(void);
/**It configures the buttons*/
void buttonsInit(void);
/**It clears the button interruption flag*/
void clearFlagC(void);
/**/
uint8 getInt(uint8 Decenas,uint8 Unidades);
float getFloat(uint8 Decenas, uint8 Unidades, uint8 Decimal1, uint8 Decimal2);
uint8 getDecena(uint8 value);
uint8 getUnidad(uint8 value);
void LCDsystem(void);
uint8 getUnidad(uint8 value);
uint8 getDecena(uint8 value);
float getFloat(uint8 Decenas, uint8 Unidades, uint8 Decimal1, uint8 Decimal2);
uint8 getInt(uint8 Decenas, uint8 Unidades);
float convierteAFahrenheit(uint8 tempCelcius);
uint8 convierteACelcius(uint8 temperaturaCelcius);



#endif /* LCDNOKIA5110_H_ */
